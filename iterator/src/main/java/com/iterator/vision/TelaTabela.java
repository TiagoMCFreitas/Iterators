/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.iterator.vision;

import com.iterator.models.Motorista;
import com.iterator.persistencia.MotoristaPersistencia;
import java.util.Iterator;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Lenovo
 */
public class TelaTabela extends javax.swing.JFrame {

    /**
     * Creates new form TelaTabela
     */
    public TelaTabela() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jComboBoxTipos = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Limpar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jComboBoxTipos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Vetor", "ArrayList", "LinkedHashSet", "LinkedList", "Deque", "Stack", "Vector" }));
        jComboBoxTipos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jComboBoxTiposMouseClicked(evt);
            }
        });
        jComboBoxTipos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxTiposActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "NOME", "PAÍS", "IDADE", "PRIMEIRO TIME", "TIME ATUAL"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jComboBoxTipos, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(199, 199, 199)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 837, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jComboBoxTipos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 83, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    DefaultTableModel model =  (DefaultTableModel) jTable1.getModel();
        model.setNumRows(0);        
    }//GEN-LAST:event_jButton1ActionPerformed
    
    private void imprimirDadosNaGrid(Iterator conjunto){
        DefaultTableModel model =  (DefaultTableModel) jTable1.getModel();
        model.setNumRows(0);
        while(conjunto.hasNext()){
                String[] linha = new String[6];
                Motorista objetoPiloto = (Motorista)conjunto.next();
                linha[0]= objetoPiloto.getId()+"";
                linha[1]= objetoPiloto.getName();
                linha[2]= objetoPiloto.getCountry();
                linha[3]= objetoPiloto.getage()+"";
                linha[4]= objetoPiloto.getFirstTeam();
                linha[5]= objetoPiloto.getCurrentTeam();
                model.addRow(linha);
            }
    }
    
    
    private void jComboBoxTiposMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBoxTiposMouseClicked
        
    
    
        
    }//GEN-LAST:event_jComboBoxTiposMouseClicked

    private void jComboBoxTiposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxTiposActionPerformed
if(jComboBoxTipos.getSelectedIndex() == 0){
            try {
                MotoristaPersistencia motorista = new MotoristaPersistencia("c:/Users/Lenovo/Desktop/IteratorProject/iterator/src/main/java/com/iterator/persistencia/motoristas.csv");
                imprimirDadosNaGrid(motorista.ListagemDePilotosVetor());
            } catch (Exception ex) {
                Logger.getLogger(TelaTabela.class.getName()).log(Level.SEVERE, null, ex);
            }
        }if(jComboBoxTipos.getSelectedIndex() == 1){
             try {
                MotoristaPersistencia motorista = new MotoristaPersistencia("c:/Users/Lenovo/Desktop/IteratorProject/iterator/src/main/java/com/iterator/persistencia/motoristas.csv");
                imprimirDadosNaGrid(motorista.listagemDePilotosArrayList());
            } catch (Exception ex) {
                Logger.getLogger(TelaTabela.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if(jComboBoxTipos.getSelectedIndex() == 2){
             try {
                MotoristaPersistencia motorista = new MotoristaPersistencia("c:/Users/Lenovo/Desktop/IteratorProject/iterator/src/main/java/com/iterator/persistencia/motoristas.csv");
                imprimirDadosNaGrid(motorista.listagemDePilotosLinkedHashSet());
            } catch (Exception ex) {
                Logger.getLogger(TelaTabela.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
         if(jComboBoxTipos.getSelectedIndex() == 3){
             try {
                MotoristaPersistencia motorista = new MotoristaPersistencia("c:/Users/Lenovo/Desktop/IteratorProject/iterator/src/main/java/com/iterator/persistencia/motoristas.csv");
                 imprimirDadosNaGrid(motorista.listagemDePilotosLinkedList());
            } catch (Exception ex) {
                Logger.getLogger(TelaTabela.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
         if(jComboBoxTipos.getSelectedIndex() == 4){
             try {
                MotoristaPersistencia motorista = new MotoristaPersistencia("c:/Users/Lenovo/Desktop/IteratorProject/iterator/src/main/java/com/iterator/persistencia/motoristas.csv");
                 imprimirDadosNaGrid(motorista.listagemDePilotosDeque());
            } catch (Exception ex) {
                Logger.getLogger(TelaTabela.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
         if(jComboBoxTipos.getSelectedIndex() == 5){
             try {
                MotoristaPersistencia motorista = new MotoristaPersistencia("c:/Users/Lenovo/Desktop/IteratorProject/iterator/src/main/java/com/iterator/persistencia/motoristas.csv");
                 imprimirDadosNaGrid(motorista.listagemDePilotosStack());
            } catch (Exception ex) {
                Logger.getLogger(TelaTabela.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
         if(jComboBoxTipos.getSelectedIndex() == 6){
             try {
                MotoristaPersistencia motorista = new MotoristaPersistencia("c:/Users/Lenovo/Desktop/IteratorProject/iterator/src/main/java/com/iterator/persistencia/motoristas.csv");
                 imprimirDadosNaGrid(motorista.listagemDePilotosVector());
            } catch (Exception ex) {
                Logger.getLogger(TelaTabela.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jComboBoxTiposActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaTabela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaTabela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaTabela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaTabela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaTabela().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBoxTipos;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
